{"ast":null,"code":"var _jsxFileName = \"/home/darbybenks/project-3-front/src/pages/CreateAppointment.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:9292\";\nconst FormDiv = styled.div`\n  width: 90%;\n  margin: auto;\n  background: rgb(240, 240, 240);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c = FormDiv;\n\nfunction CreateAppointment() {\n  _s();\n\n  const history = useHistory();\n  const [appointment_date, setAppointmentDate] = useState(\"\");\n  const [appointment_duration, setAppointmentDuration] = useState(0);\n  const [appointment_type, setAppointmentType] = useState(\"\");\n  const [appointment_reason, setAppointmentReason] = useState(\"\");\n  const [doctor_lastname, setDoctorLastName] = useState(\"\");\n  const [patient_lastname, setPatientLastName] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(BASE_URL + \"/appointments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        appointment_type: appointment_type,\n        appointment_date: appointment_date,\n        appointment_duration: appointment_duration,\n        appointment_reason: appointment_reason,\n        // appointment_doctor: appointment_doctor,\n        appointment_doctor: doctor_lastname,\n        // appointment_patient: appointment_patient,\n        appointment_patient: patient_lastname\n      })\n    }).then(r => r.json()).then(newAppointment => {\n      setNewAppointment(newAppointment);\n      console.log(newAppointment);\n    });\n    console.log(\"New appointment made.\");\n    history.push(\"/\"); // Need to find a way to check if the doctor and patient already exists in database\n\n    /******************************************************************/\n    // fetch(BASE_URL + \"/doctors\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify({\n    //     doctor_lastname: doctor_lastname,\n    //   }),\n    // })\n    //   .then((r) => r.json())\n    //   .then(setDoctor);\n    // console.log(\"Created a doctor\");\n    // fetch(BASE_URL + \"/patients\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify({\n    //     patient_lastname: patient_lastname,\n    //   }),\n    // })\n    //   .then((r) => r.json())\n    //   .then(setPatient);\n    // console.log(\"Created a patient\");\n\n    /******************************************************************/\n  }\n\n  function handleDoctorLastNameChange(e) {\n    setDoctorLastName(e.target.value);\n  }\n\n  function handlePatientLastNameChange(e) {\n    setPatientLastName(e.target.value);\n  }\n\n  function handleAppointmentTypeChange(e) {\n    setAppointmentType(e.target.value);\n  }\n\n  function handleAppointmentDateChange(e) {\n    setAppointmentDate(e.target.value);\n  }\n\n  function handleAppointmentDurationChange(e) {\n    setAppointmentDuration(e.target.value);\n  }\n\n  function handleAppointmentReasonChange(e) {\n    setAppointmentReason(e.target.value);\n  } // function handleAppointmentDoctorChange(e) {\n  //   setAppointmentDoctor(e.target.value);\n  // }\n  // function handleAppointmentPatientChange(e) {\n  //   setAppointmentPatient(e.target.value);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"pad-left\",\n      children: \"Create An Apointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormDiv, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-container halves\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"appdoc\",\n              children: \"Doctor's Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"appdoc\",\n              type: \"text\",\n              onChange: handleDoctorLastNameChange,\n              value: doctor_lastname,\n              placeholder: \"Doctor\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"apppat\",\n              children: \"Patient's Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"apppat\",\n              type: \"text\",\n              onChange: handlePatientLastNameChange,\n              value: patient_lastname,\n              placeholder: \"Patient\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-container thirds\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"appdate\",\n              children: \"Appointment Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"appdate\",\n              type: \"date\",\n              onChange: handleAppointmentDateChange,\n              value: appointment_date,\n              placeholder: \"date\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"appdur\",\n              children: \"Appointment Duration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"appdur\",\n              type: \"number\",\n              onChange: handleAppointmentDurationChange,\n              value: appointment_duration,\n              placeholder: \"duration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"apptype\",\n              children: \"Appointment Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"apptype\",\n              type: \"text\",\n              onChange: handleAppointmentTypeChange,\n              value: appointment_type,\n              placeholder: \"type\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"New-Patient\",\n                children: \"New Patient Evaluation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Walk-in\",\n                children: \"Walk-in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Follow-up\",\n                children: \"Routine Follow-Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Urgent\",\n                children: \"Urgent Visit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-container full\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"appreason\",\n            children: \"Appointment Reason\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"appreason\",\n            className: \"u-full-width\",\n            type: \"text\",\n            onChange: handleAppointmentReasonChange,\n            value: appointment_reason,\n            placeholder: \"reason\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-container full\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button-primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateAppointment, \"53jnfq1KqPTuo1EaP0gAQwMIJgg=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = CreateAppointment;\nexport default CreateAppointment;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormDiv\");\n$RefreshReg$(_c2, \"CreateAppointment\");","map":{"version":3,"sources":["/home/darbybenks/project-3-front/src/pages/CreateAppointment.js"],"names":["useEffect","useState","styled","useHistory","BASE_URL","FormDiv","div","CreateAppointment","history","appointment_date","setAppointmentDate","appointment_duration","setAppointmentDuration","appointment_type","setAppointmentType","appointment_reason","setAppointmentReason","doctor_lastname","setDoctorLastName","patient_lastname","setPatientLastName","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","appointment_doctor","appointment_patient","then","r","json","newAppointment","setNewAppointment","console","log","push","handleDoctorLastNameChange","target","value","handlePatientLastNameChange","handleAppointmentTypeChange","handleAppointmentDateChange","handleAppointmentDurationChange","handleAppointmentReasonChange"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\n\nconst BASE_URL = \"http://localhost:9292\";\n\nconst FormDiv = styled.div`\n  width: 90%;\n  margin: auto;\n  background: rgb(240, 240, 240);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nfunction CreateAppointment() {\n  const history = useHistory();\n\n  const [appointment_date, setAppointmentDate] = useState(\"\");\n  const [appointment_duration, setAppointmentDuration] = useState(0);\n  const [appointment_type, setAppointmentType] = useState(\"\");\n  const [appointment_reason, setAppointmentReason] = useState(\"\");\n  const [doctor_lastname, setDoctorLastName] = useState(\"\");\n  const [patient_lastname, setPatientLastName] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    fetch(BASE_URL + \"/appointments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        appointment_type: appointment_type,\n        appointment_date: appointment_date,\n        appointment_duration: appointment_duration,\n        appointment_reason: appointment_reason,\n\n        // appointment_doctor: appointment_doctor,\n        appointment_doctor: doctor_lastname,\n        // appointment_patient: appointment_patient,\n        appointment_patient: patient_lastname,\n      }),\n    })\n      .then((r) => r.json())\n      .then((newAppointment) => {\n        setNewAppointment(newAppointment);\n        console.log(newAppointment)\n      });\n    console.log(\"New appointment made.\");\n\n    history.push(\"/\")\n\n    // Need to find a way to check if the doctor and patient already exists in database\n    /******************************************************************/\n    // fetch(BASE_URL + \"/doctors\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify({\n    //     doctor_lastname: doctor_lastname,\n    //   }),\n    // })\n    //   .then((r) => r.json())\n    //   .then(setDoctor);\n\n    // console.log(\"Created a doctor\");\n\n    // fetch(BASE_URL + \"/patients\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify({\n    //     patient_lastname: patient_lastname,\n    //   }),\n    // })\n    //   .then((r) => r.json())\n    //   .then(setPatient);\n\n    // console.log(\"Created a patient\");\n\n    /******************************************************************/\n  }\n\n  function handleDoctorLastNameChange(e) {\n    setDoctorLastName(e.target.value);\n  }\n\n  function handlePatientLastNameChange(e) {\n    setPatientLastName(e.target.value);\n  }\n\n  function handleAppointmentTypeChange(e) {\n    setAppointmentType(e.target.value);\n  }\n\n  function handleAppointmentDateChange(e) {\n    setAppointmentDate(e.target.value);\n  }\n\n  function handleAppointmentDurationChange(e) {\n    setAppointmentDuration(e.target.value);\n  }\n\n  function handleAppointmentReasonChange(e) {\n    setAppointmentReason(e.target.value);\n  }\n\n  // function handleAppointmentDoctorChange(e) {\n  //   setAppointmentDoctor(e.target.value);\n  // }\n\n  // function handleAppointmentPatientChange(e) {\n  //   setAppointmentPatient(e.target.value);\n  // }\n\n  return (\n    <div>\n      <h3 className=\"pad-left\">Create An Apointment</h3>\n      <FormDiv>\n        <form onSubmit={handleSubmit}>\n          <div className=\"grid-container halves\">\n            {/* <div>\n              <label htmlFor=\"appdoc\">Doctor's Name</label>\n              <input\n                id=\"appdoc\"\n                type=\"text\"\n                onChange={handleAppointmentDoctorChange}\n                value={appointment_doctor}\n                placeholder=\"Doctor's Lastname\"\n                required\n              />\n            </div> */}\n\n            <div>\n              <label htmlFor=\"appdoc\">Doctor's Name</label>\n              <input\n                id=\"appdoc\"\n                type=\"text\"\n                onChange={handleDoctorLastNameChange}\n                value={doctor_lastname}\n                placeholder=\"Doctor\"\n                required\n              />\n            </div>\n\n            {/* <div>\n              <label htmlFor=\"apppat\">Patient's Name</label>\n              <input\n                id=\"apppat\"\n                type=\"text\"\n                onChange={handleAppointmentPatientChange}\n                value={appointment_patient}\n                placeholder=\"Patient's Lastname\"\n                required\n              />\n            </div> */}\n\n            <div>\n              <label htmlFor=\"apppat\">Patient's Name</label>\n              <input\n                id=\"apppat\"\n                type=\"text\"\n                onChange={handlePatientLastNameChange}\n                value={patient_lastname}\n                placeholder=\"Patient\"\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"grid-container thirds\">\n            <div>\n              <label htmlFor=\"appdate\">Appointment Date</label>\n              <input\n                id=\"appdate\"\n                type=\"date\"\n                onChange={handleAppointmentDateChange}\n                value={appointment_date}\n                placeholder=\"date\"\n                required\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"appdur\">Appointment Duration</label>\n              <input\n                id=\"appdur\"\n                type=\"number\"\n                onChange={handleAppointmentDurationChange}\n                value={appointment_duration}\n                placeholder=\"duration\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"apptype\">Appointment Type</label>\n              <select\n                id=\"apptype\"\n                type=\"text\"\n                onChange={handleAppointmentTypeChange}\n                value={appointment_type}\n                placeholder=\"type\"\n              >\n                <option value=\"New-Patient\">New Patient Evaluation</option>\n                <option value=\"Walk-in\">Walk-in</option>\n                <option value=\"Follow-up\">Routine Follow-Up</option>\n                <option value=\"Urgent\">Urgent Visit</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"grid-container full\">\n            <label htmlFor=\"appreason\">Appointment Reason</label>\n            <textarea\n              id=\"appreason\"\n              className=\"u-full-width\"\n              type=\"text\"\n              onChange={handleAppointmentReasonChange}\n              value={appointment_reason}\n              placeholder=\"reason\"\n            ></textarea>\n          </div>\n\n          <div className=\"grid-container full\">\n            <button type=\"submit\" className=\"button-primary\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </FormDiv>\n    </div>\n  );\n}\n\nexport default CreateAppointment;\n"]},"metadata":{},"sourceType":"module"}