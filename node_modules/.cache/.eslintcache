[{"/home/darbybenks/project-3-front/src/index.js":"1","/home/darbybenks/project-3-front/src/components/App.js":"2","/home/darbybenks/project-3-front/src/pages/Home.js":"3","/home/darbybenks/project-3-front/src/pages/Doctors.js":"4","/home/darbybenks/project-3-front/src/pages/Patients.js":"5","/home/darbybenks/project-3-front/src/pages/UpdateDoctor.js":"6","/home/darbybenks/project-3-front/src/pages/UpdatePatient.js":"7","/home/darbybenks/project-3-front/src/pages/AppointmentDetails.js":"8","/home/darbybenks/project-3-front/src/pages/CreateDoctor.js":"9","/home/darbybenks/project-3-front/src/pages/CreatePatient.js":"10","/home/darbybenks/project-3-front/src/pages/UpdateAppointment.js":"11","/home/darbybenks/project-3-front/src/pages/CreateAppointment.js":"12","/home/darbybenks/project-3-front/src/components/DoctorList.js":"13","/home/darbybenks/project-3-front/src/components/AppointmentList.js":"14","/home/darbybenks/project-3-front/src/components/PatientList.js":"15","/home/darbybenks/project-3-front/src/components/DoctorRow.js":"16","/home/darbybenks/project-3-front/src/components/AppointmentRow.js":"17","/home/darbybenks/project-3-front/src/components/PatientRow.js":"18"},{"size":382,"mtime":1652464035777,"results":"19","hashOfConfig":"20"},{"size":1553,"mtime":1652464035777,"results":"21","hashOfConfig":"20"},{"size":763,"mtime":1652475321077,"results":"22","hashOfConfig":"20"},{"size":929,"mtime":1652464035777,"results":"23","hashOfConfig":"20"},{"size":976,"mtime":1652464035777,"results":"24","hashOfConfig":"20"},{"size":3670,"mtime":1652475554697,"results":"25","hashOfConfig":"20"},{"size":4877,"mtime":1652475542767,"results":"26","hashOfConfig":"20"},{"size":7599,"mtime":1652475510867,"results":"27","hashOfConfig":"20"},{"size":3397,"mtime":1652464035777,"results":"28","hashOfConfig":"20"},{"size":4976,"mtime":1652464035777,"results":"29","hashOfConfig":"20"},{"size":5148,"mtime":1652464035777,"results":"30","hashOfConfig":"20"},{"size":6041,"mtime":1652475447007,"results":"31","hashOfConfig":"20"},{"size":1202,"mtime":1652464035777,"results":"32","hashOfConfig":"20"},{"size":1704,"mtime":1652464035777,"results":"33","hashOfConfig":"20"},{"size":1283,"mtime":1652464035777,"results":"34","hashOfConfig":"20"},{"size":694,"mtime":1652464035777,"results":"35","hashOfConfig":"20"},{"size":1906,"mtime":1652464035777,"results":"36","hashOfConfig":"20"},{"size":870,"mtime":1652464035777,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"14tclog",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/darbybenks/project-3-front/src/index.js",["97"],[],"/home/darbybenks/project-3-front/src/components/App.js",[],[],"/home/darbybenks/project-3-front/src/pages/Home.js",["98"],[],"import { useState } from \"react\";\nimport AppointmentList from \"../components/AppointmentList\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Home() {\n  const [isDetails] = useState(false);\n  const history = useHistory();\n\n  function handleCreateAppointmentButton() {\n    history.push(\"/create-appointment\");\n  }\n\n  return (\n    <div className=\"list-container\">\n      <h3>Appointments</h3>\n\n      <AppointmentList />\n      <div className=\"container\">\n        <div className=\"center\">\n          <button\n            type=\"button\"\n            className=\"button-primary\"\n            onClick={handleCreateAppointmentButton}\n          >\n            Create an Appointment\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/home/darbybenks/project-3-front/src/pages/Doctors.js",["99","100"],[],"/home/darbybenks/project-3-front/src/pages/Patients.js",["101","102"],[],"/home/darbybenks/project-3-front/src/pages/UpdateDoctor.js",["103","104"],[],"import { useParams } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n\nimport styled from \"styled-components\";\n\nconst BASE_URL = \"http://localhost:9292\";\n\nconst FormDiv = styled.div`\n  width: 90%;\n  margin: auto;\n  background: rgb(240, 240, 240);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nfunction UpdateDoctor() {\n  const history = useHistory();\n\n  const { id } = useParams();\n  const [updatedDoctor, setUpdatedDactor] = useState([]);\n  const [doctor_firstname, setDoctorFirstName] = useState(\"\");\n  const [doctor_lastname, setDoctorLastName] = useState(\"\");\n  const [doctor_phone, setDoctorPhone] = useState(\"\");\n  const [doctor_email, setDoctorEmail] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(BASE_URL + `/doctors/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: id,\n        doctor_firstname: doctor_firstname,\n        // doctor_lastname: doctor_lastname,\n        doctor_phone: doctor_phone,\n        doctor_email: doctor_email,\n      }),\n    })\n      .then((r) => r.json())\n      // .then(setUpdatedDactor);\n      .then (updateDoctor => {\n        console.log(updatedDoctor)\n        setUpdatedDactor(updateDoctor)\n      })\n      \n      \n    console.log(\"Updated doctor\");\n    history.push(\"/doctors\")\n  }\n\n  function handleDoctorFirstNameChange(e) {\n    setDoctorFirstName(e.target.value);\n  }\n\n  function handleDoctorLastNameChange(e) {\n    setDoctorLastName(e.target.value);\n  }\n\n  function handleDoctorPhoneChange(e) {\n    setDoctorPhone(e.target.value);\n  }\n\n  function handleDoctorEmailChange(e) {\n    setDoctorEmail(e.target.value);\n  }\n\n  return (\n    <div>\n      <h3 className=\"pad-left\">Update A Doctor</h3>\n\n      <FormDiv>\n        <form onSubmit={handleSubmit}>\n          <div className=\"grid-container full\">\n            <div>\n              <label htmlFor=\"appdoc\">First Name</label>\n              <input\n                id=\"appdoc\"\n                type=\"text\"\n                onChange={handleDoctorFirstNameChange}\n                value={doctor_firstname}\n                placeholder=\"First Name\"\n                required\n              />\n            </div>\n\n            {/* <div>\n              <label htmlFor=\"appdoc\">Last Name</label>\n              <input\n                id=\"appdoc\"\n                type=\"text\"\n                onChange={handleDoctorLastNameChange}\n                value={doctor_lastname}\n                placeholder=\"Last Name\"\n                required\n              />\n            </div> */}\n\n            \n          </div>\n\n          <div className=\"grid-container halves\">\n            <div>\n              <label htmlFor=\"appdoc\">Phone</label>\n              <input\n                id=\"appdoc\"\n                type=\"text\"\n                onChange={handleDoctorPhoneChange}\n                value={doctor_phone}\n                placeholder=\"xxx-xxx-xxxx\"\n                required\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"appdoc\">Email</label>\n              <input\n                id=\"appdoc\"\n                type=\"text\"\n                onChange={handleDoctorEmailChange}\n                value={doctor_email}\n                placeholder=\"Email\"\n                required\n              />\n            </div>\n          </div>\n          <div className=\"grid-container full\">\n            <button type=\"submit\" className=\"button-primary\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </FormDiv>\n    </div>\n  );\n}\n\nexport default UpdateDoctor;\n","/home/darbybenks/project-3-front/src/pages/UpdatePatient.js",["105","106","107"],[],"import { useParams } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n\nimport styled from \"styled-components\";\n\nconst BASE_URL = \"http://localhost:9292\";\n\nconst FormDiv = styled.div`\n  width: 90%;\n  margin: auto;\n  background: rgb(240, 240, 240);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nfunction UpdatePatient() {\n  const history = useHistory();\n  const { id } = useParams();\n  const [updatedPatient, setUpdatedPatient] = useState([]);\n  const [patient_firstname, setPatientFirstName] = useState(\"\");\n  const [patient_lastname, setPatientLastName] = useState(\"\");\n  const [patient_phone, setPatientPhone] = useState(\"\");\n  const [patient_email, setPatientEmail] = useState(\"\");\n  const [patient_address, setPatientAddress] = useState(\"\");\n  const [patient_city, setPatientCity] = useState(\"\");\n  const [patient_state, setPatientState] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(BASE_URL + `/patients/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: id,\n        patient_firstname: patient_firstname,\n        // patient_lastname: patient_lastname,\n        patient_phone: patient_phone,\n        patient_email: patient_email,\n        patient_address: patient_address,\n        patient_city: patient_city,\n        patient_state: patient_state,\n      }),\n    })\n      .then((r) => r.json())\n      // .then(setUpdatedDactor);\n      .then((updatePatient) => {\n        // console.log(updatedPatient);\n        setUpdatedPatient(updatePatient);\n      });\n\n    console.log(\"Updated patient\");\n    history.push(\"/patients\")\n  }\n\n  function handlePatientFirstNameChange(e) {\n    setPatientFirstName(e.target.value);\n  }\n\n \n\n  function handlePatientPhoneChange(e) {\n    setPatientPhone(e.target.value);\n  }\n\n  function handlePatientEmailChange(e) {\n    setPatientEmail(e.target.value);\n  }\n  function handlePatientAddressChange(e) {\n    setPatientAddress(e.target.value);\n  }\n  function handlePatientCityChange(e) {\n    setPatientCity(e.target.value);\n  }\n  function handlePatientStateChange(e) {\n    setPatientState(e.target.value);\n  }\n\n  return (\n    <div>\n      <h3 className=\"pad-left\">Update A Patient</h3>\n\n      <FormDiv>\n        <form onSubmit={handleSubmit}>\n          <div className=\"grid-container full\">\n            <div>\n              <label htmlFor=\"appdoc\">First Name</label>\n              <input\n                id=\"appdoc\"\n                type=\"text\"\n                onChange={handlePatientFirstNameChange}\n                value={patient_firstname}\n                placeholder=\"First Name\"\n                required\n              />\n            </div>\n\n           \n          </div>\n\n          <div className=\"grid-container halves\">\n            <div>\n              <label htmlFor=\"appdoc\">Phone</label>\n              <input\n                id=\"appdoc\"\n                type=\"text\"\n                onChange={handlePatientPhoneChange}\n                value={patient_phone}\n                placeholder=\"xxx-xxx-xxxx\"\n                required\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"appdoc\">Email</label>\n              <input\n                id=\"appdoc\"\n                type=\"text\"\n                onChange={handlePatientEmailChange}\n                value={patient_email}\n                placeholder=\"Email\"\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"grid-container thirds\">\n            <div>\n              <label htmlFor=\"appdoc\">Address</label>\n              <input\n                id=\"appdoc\"\n                type=\"text\"\n                onChange={handlePatientAddressChange}\n                value={patient_address}\n                placeholder=\"Address\"\n                required\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"appdoc\">City</label>\n              <input\n                id=\"appdoc\"\n                type=\"text\"\n                onChange={handlePatientCityChange}\n                value={patient_city}\n                placeholder=\"city\"\n                required\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"appdoc\">State</label>\n              <input\n                id=\"appdoc\"\n                type=\"text\"\n                onChange={handlePatientStateChange}\n                value={patient_state}\n                placeholder=\"State\"\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"grid-container full\">\n            <button type=\"submit\" className=\"button-primary\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </FormDiv>\n    </div>\n  );\n}\n\nexport default UpdatePatient;\n","/home/darbybenks/project-3-front/src/pages/AppointmentDetails.js",["108","109","110"],[],"import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\n\nconst BASE_URL = \"http://localhost:9292\";\n\nconst AppTable = styled.table`\n  margin: auto;\n\n  border-collapse: collapse;\n\n  td,\n  th {\n    border: 1px solid #dddddd;\n    padding: 8px;\n  }\n\n  td.left-column {\n    text-align: right;\n    width: 30%;\n  }\n\n  tr:nth-child(even) {\n    background-color: #dddddd;\n  }\n`;\n\nfunction AppointmentDetails({ onUpdateAppointment }) {\n  const history = useHistory();\n  let appointmentDoctor = {};\n  let appointmentPatient = {};\n  const { id } = useParams();\n  const [appointment, setAppointment] = useState([]);\n  const [doctors, setDoctors] = useState([]);\n  const [patients, setPatients] = useState([]);\n  const [toBeUpdatedDoctor, setToBeUpdatedDoctor] = useState(\"\");\n  const [toBeUpdatedPatient, setToBeUpdatedPatient] = useState(\"\");\n  \n\n  useEffect(() => {\n    fetch(BASE_URL + \"/doctors\")\n      .then((r) => r.json())\n      .then((doctors) => {\n        setDoctors(doctors);\n      });\n    fetch(BASE_URL + \"/patients\")\n      .then((r) => r.json())\n      .then((patients) => setPatients(patients));\n\n    fetch(BASE_URL + `/appointments/${id}`)\n      .then((r) => r.json())\n      .then((appointment) => {\n       \n        setAppointment(appointment);\n      });\n  }, []);\n\n  patients.forEach((eachPatient) => {\n \n    for (const key in eachPatient) {\n      if (appointment.appointment_patient === eachPatient[key]) {\n     ;\n        appointmentPatient = eachPatient;\n      }\n    }\n  });\n\n  doctors.forEach((eachDoctor) => {\n    for (const key in eachDoctor) {\n      if (appointment.appointment_doctor === eachDoctor[key]) {\n        appointmentDoctor = eachDoctor;\n        console.log(appointmentDoctor);\n      }\n    }\n  });\n\n  function handleUpdateAppointment(e) {\n    history.push(`/appointment/update/${appointment.id}`);\n  }\n\n  function handleUpdateDoctor(e) {\n    fetch(BASE_URL + `/doctors/${appointmentDoctor.id}`)\n      .then((r) => r.json())\n      .then((toBeUpdatedDoctor) => {\n        console.log(toBeUpdatedDoctor);\n        setToBeUpdatedDoctor(toBeUpdatedDoctor);\n        history.push(`/doctor/update/${toBeUpdatedDoctor.id}`);\n      })\n      .catch((error) => {\n        window.alert(\n          \"Doctor not in database, please create one in the Doctor page.\"\n        );\n        history.push(\"/create-doctor\");\n      });\n  }\n\n  function handleUpdatePatient(e) {\n    fetch(BASE_URL + `/patients/${appointmentPatient.id}`)\n      .then((r) => r.json())\n      .then((toBeUpdatedPatient) => {\n        console.log(toBeUpdatedPatient);\n        setToBeUpdatedPatient(toBeUpdatedPatient);\n        history.push(`/patient/update/${toBeUpdatedPatient.id}`);\n      })\n      .catch((error) => {\n        window.alert(\n          \"Patient not in database, please create one in the Patient page.\"\n        );\n        history.push(\"/create-patient\");\n      });\n  }\n\n  return (\n    <div>\n      <AppTable>\n        <tbody>\n          <tr>\n            <td className=\"left-column\">Date</td>\n            <td className=\"right-column\">\n              {appointment.appointment_date === null ||\n              appointment.appointment_date === undefined\n                ? \"\"\n                : appointment.appointment_date.toString().split(\"T\")[0]}\n            </td>\n          </tr>\n          <tr>\n            <td className=\"left-column\">Duration</td>\n            <td className=\"right-column\">\n              {appointment.appointment_duration === null\n                ? \"\"\n                : appointment.appointment_duration}{\" \"}\n              minutes\n            </td>\n          </tr>\n          <tr>\n            <td className=\"left-column\">Type</td>\n            <td className=\"right-column\">\n              {appointment.appointment_type === null\n                ? \"\"\n                : appointment.appointment_type}\n            </td>\n          </tr>\n          <tr>\n            <td className=\"left-column\">Reason</td>\n            <td>\n              {appointment.appointment_reason === null\n                ? \"\"\n                : appointment.appointment_reason}\n            </td>\n          </tr>\n\n          \n          <tr>\n            <td className=\"left-column\">Doctor's Last Name</td>\n            <td>\n              {appointment.appointment_doctor === null\n                ? appointmentDoctor.doctor_lastname\n                : appointment.appointment_doctor}\n            </td>\n          </tr>\n         \n\n          <tr>\n            <td className=\"left-column\">Doctor's First Name</td>\n            <td>\n              {appointmentDoctor.doctor_firstname === null\n                ? \"\"\n                : appointmentDoctor.doctor_firstname}\n            </td>\n          </tr>\n\n          <tr>\n            <td className=\"left-column\">Doctor's email</td>\n            <td>\n              {appointmentDoctor.doctor_email === null\n                ? \"\"\n                : appointmentDoctor.doctor_email}\n            </td>\n          </tr>\n          <tr>\n            <td className=\"left-column\">Doctor's phone</td>\n            <td>\n              {appointmentDoctor.doctor_phone === null\n                ? \"\"\n                : appointmentDoctor.doctor_phone}\n            </td>\n          </tr>\n          \n\n          <tr>\n            <td className=\"left-column\">Patient's Last Name</td>\n            <td>\n              {appointmentPatient.patient_lastname === null\n                ? appointmentPatient.patient_lastname\n                : appointment.appointment_patient}\n\n             \n            </td>\n          </tr>\n          \n\n          <tr>\n            <td className=\"left-column\">Patient's First Name</td>\n            <td>\n              {appointmentPatient.patient_firstname === null\n                ? \"\"\n                : appointmentPatient.patient_firstname}\n            </td>\n          </tr>\n\n          <tr>\n            <td className=\"left-column\">Patient's phone</td>\n            <td>\n              {appointmentPatient.patient_phone === null\n                ? \"\"\n                : appointmentPatient.patient_phone}\n            </td>\n          </tr>\n          <tr>\n            <td className=\"left-column\">Patient's email</td>\n            <td>\n              {appointmentPatient.patient_email === null\n                ? \"\"\n                : appointmentPatient.patient_email}\n            </td>\n          </tr>\n\n          <tr>\n            <td className=\"left-column\">Patient's address</td>\n            <td>\n              {appointmentPatient.patient_address === null ||\n              appointmentPatient.patient_address === undefined\n                ? \"\"\n                : appointmentPatient.patient_address + \", \"}\n              {appointmentPatient.patient_city === null ||\n              appointmentPatient.patient_city === undefined\n                ? \"\"\n                : appointmentPatient.patient_city + \", \"}\n              {appointmentPatient.patient_state === null\n                ? \"\"\n                : appointmentPatient.patient_state}\n            </td>\n          </tr>\n        </tbody>\n      </AppTable>\n\n      <div className=\"grid-container thirds\">\n        <div>\n          <button type=\"button\" onClick={handleUpdateAppointment}>\n            Appointment\n          </button>\n        </div>\n\n        <div>\n          <button type=\"button\" onClick={handleUpdateDoctor}>\n            Doctor\n          </button>\n        </div>\n\n        <div>\n          <button type=\"button\" onClick={handleUpdatePatient}>\n            Patient\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AppointmentDetails;\n","/home/darbybenks/project-3-front/src/pages/CreateDoctor.js",["111"],[],"/home/darbybenks/project-3-front/src/pages/CreatePatient.js",["112"],[],"/home/darbybenks/project-3-front/src/pages/UpdateAppointment.js",["113","114","115","116"],[],"/home/darbybenks/project-3-front/src/pages/CreateAppointment.js",["117","118"],[],"import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\n\nconst BASE_URL = \"http://localhost:9292\";\n\nconst FormDiv = styled.div`\n  width: 90%;\n  margin: auto;\n  background: rgb(240, 240, 240);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nfunction CreateAppointment() {\n  const history = useHistory();\n  \n\n  const [newAppointment, setNewAppointment] = useState([]);\n  const [appointment_date, setAppointmentDate] = useState(\"\");\n  const [appointment_duration, setAppointmentDuration] = useState(0);\n  const [appointment_type, setAppointmentType] = useState(\"\");\n  const [appointment_reason, setAppointmentReason] = useState(\"\");\n  const [doctor_lastname, setDoctorLastName] = useState(\"\");\n  const [patient_lastname, setPatientLastName] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    fetch(BASE_URL + \"/appointments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        appointment_type: appointment_type,\n        appointment_date: appointment_date,\n        appointment_duration: appointment_duration,\n        appointment_reason: appointment_reason,\n\n        \n        appointment_doctor: doctor_lastname,\n        appointment_patient: patient_lastname,\n      }),\n    })\n      .then((r) => r.json())\n      .then((newAppointment) => {\n        setNewAppointment(newAppointment);\n        console.log(newAppointment)\n      });\n    console.log(\"New appointment made.\");\n\n    history.push(\"/\")\n\n  \n  }\n\n  function handleDoctorLastNameChange(e) {\n    setDoctorLastName(e.target.value);\n  }\n\n  function handlePatientLastNameChange(e) {\n    setPatientLastName(e.target.value);\n  }\n\n  function handleAppointmentTypeChange(e) {\n    setAppointmentType(e.target.value);\n  }\n\n  function handleAppointmentDateChange(e) {\n    setAppointmentDate(e.target.value);\n  }\n\n  function handleAppointmentDurationChange(e) {\n    setAppointmentDuration(e.target.value);\n  }\n\n  function handleAppointmentReasonChange(e) {\n    setAppointmentReason(e.target.value);\n  }\n\n  // function handleAppointmentDoctorChange(e) {\n  //   setAppointmentDoctor(e.target.value);\n  // }\n\n  // function handleAppointmentPatientChange(e) {\n  //   setAppointmentPatient(e.target.value);\n  // }\n\n  return (\n    <div>\n      <h3 className=\"pad-left\">Create An Apointment</h3>\n      <FormDiv>\n        <form onSubmit={handleSubmit}>\n          <div className=\"grid-container halves\">\n            {/* <div>\n              <label htmlFor=\"appdoc\">Doctor's Name</label>\n              <input\n                id=\"appdoc\"\n                type=\"text\"\n                onChange={handleAppointmentDoctorChange}\n                value={appointment_doctor}\n                placeholder=\"Doctor's Lastname\"\n                required\n              />\n            </div> */}\n\n            <div>\n              <label htmlFor=\"appdoc\">Doctor's Name</label>\n              <input\n                id=\"appdoc\"\n                type=\"text\"\n                onChange={handleDoctorLastNameChange}\n                value={doctor_lastname}\n                placeholder=\"Doctor\"\n                required\n              />\n            </div>\n\n            {/* <div>\n              <label htmlFor=\"apppat\">Patient's Name</label>\n              <input\n                id=\"apppat\"\n                type=\"text\"\n                onChange={handleAppointmentPatientChange}\n                value={appointment_patient}\n                placeholder=\"Patient's Lastname\"\n                required\n              />\n            </div> */}\n\n            <div>\n              <label htmlFor=\"apppat\">Patient's Name</label>\n              <input\n                id=\"apppat\"\n                type=\"text\"\n                onChange={handlePatientLastNameChange}\n                value={patient_lastname}\n                placeholder=\"Patient\"\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"grid-container thirds\">\n            <div>\n              <label htmlFor=\"appdate\">Appointment Date</label>\n              <input\n                id=\"appdate\"\n                type=\"date\"\n                onChange={handleAppointmentDateChange}\n                value={appointment_date}\n                placeholder=\"date\"\n                required\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"appdur\">Appointment Duration</label>\n              <input\n                id=\"appdur\"\n                type=\"number\"\n                onChange={handleAppointmentDurationChange}\n                value={appointment_duration}\n                placeholder=\"duration\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"apptype\">Appointment Type</label>\n              <select\n                id=\"apptype\"\n                type=\"text\"\n                onChange={handleAppointmentTypeChange}\n                value={appointment_type}\n                placeholder=\"type\"\n              >\n                <option value=\"New-Patient\">New Patient Evaluation</option>\n                <option value=\"Walk-in\">Walk-in</option>\n                <option value=\"Follow-up\">Routine Follow-Up</option>\n                <option value=\"Urgent\">Urgent Visit</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"grid-container full\">\n            <label htmlFor=\"appreason\">Appointment Reason</label>\n            <textarea\n              id=\"appreason\"\n              className=\"u-full-width\"\n              type=\"text\"\n              onChange={handleAppointmentReasonChange}\n              value={appointment_reason}\n              placeholder=\"reason\"\n            ></textarea>\n          </div>\n\n          <div className=\"grid-container full\">\n            <button type=\"submit\" className=\"button-primary\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </FormDiv>\n    </div>\n  );\n}\n\nexport default CreateAppointment;\n","/home/darbybenks/project-3-front/src/components/DoctorList.js",["119"],[],"/home/darbybenks/project-3-front/src/components/AppointmentList.js",["120","121","122","123"],[],"/home/darbybenks/project-3-front/src/components/PatientList.js",[],[],"/home/darbybenks/project-3-front/src/components/DoctorRow.js",["124"],[],"/home/darbybenks/project-3-front/src/components/AppointmentRow.js",["125","126"],[],"/home/darbybenks/project-3-front/src/components/PatientRow.js",["127"],[],{"ruleId":"128","severity":1,"message":"129","line":5,"column":25,"nodeType":"130","messageId":"131","endLine":5,"endColumn":30},{"ruleId":"128","severity":1,"message":"132","line":6,"column":10,"nodeType":"130","messageId":"131","endLine":6,"endColumn":19},{"ruleId":"128","severity":1,"message":"133","line":1,"column":10,"nodeType":"130","messageId":"131","endLine":1,"endColumn":19},{"ruleId":"128","severity":1,"message":"134","line":8,"column":19,"nodeType":"130","messageId":"131","endLine":8,"endColumn":29},{"ruleId":"128","severity":1,"message":"133","line":1,"column":10,"nodeType":"130","messageId":"131","endLine":1,"endColumn":19},{"ruleId":"128","severity":1,"message":"135","line":1,"column":21,"nodeType":"130","messageId":"131","endLine":1,"endColumn":29},{"ruleId":"128","severity":1,"message":"136","line":25,"column":10,"nodeType":"130","messageId":"131","endLine":25,"endColumn":25},{"ruleId":"128","severity":1,"message":"137","line":60,"column":12,"nodeType":"130","messageId":"131","endLine":60,"endColumn":38},{"ruleId":"128","severity":1,"message":"138","line":22,"column":10,"nodeType":"130","messageId":"131","endLine":22,"endColumn":24},{"ruleId":"128","severity":1,"message":"139","line":24,"column":10,"nodeType":"130","messageId":"131","endLine":24,"endColumn":26},{"ruleId":"128","severity":1,"message":"140","line":24,"column":28,"nodeType":"130","messageId":"131","endLine":24,"endColumn":46},{"ruleId":"128","severity":1,"message":"141","line":37,"column":10,"nodeType":"130","messageId":"131","endLine":37,"endColumn":27},{"ruleId":"128","severity":1,"message":"142","line":38,"column":10,"nodeType":"130","messageId":"131","endLine":38,"endColumn":28},{"ruleId":"143","severity":1,"message":"144","line":57,"column":6,"nodeType":"145","endLine":57,"endColumn":8,"suggestions":"146"},{"ruleId":"128","severity":1,"message":"147","line":18,"column":10,"nodeType":"130","messageId":"131","endLine":18,"endColumn":23},{"ruleId":"128","severity":1,"message":"138","line":20,"column":10,"nodeType":"130","messageId":"131","endLine":20,"endColumn":24},{"ruleId":"128","severity":1,"message":"133","line":1,"column":10,"nodeType":"130","messageId":"131","endLine":1,"endColumn":19},{"ruleId":"128","severity":1,"message":"148","line":21,"column":10,"nodeType":"130","messageId":"131","endLine":21,"endColumn":28},{"ruleId":"128","severity":1,"message":"149","line":70,"column":12,"nodeType":"130","messageId":"131","endLine":70,"endColumn":41},{"ruleId":"128","severity":1,"message":"150","line":74,"column":12,"nodeType":"130","messageId":"131","endLine":74,"endColumn":42},{"ruleId":"128","severity":1,"message":"133","line":1,"column":10,"nodeType":"130","messageId":"131","endLine":1,"endColumn":19},{"ruleId":"128","severity":1,"message":"151","line":20,"column":10,"nodeType":"130","messageId":"131","endLine":20,"endColumn":24},{"ruleId":"128","severity":1,"message":"152","line":1,"column":8,"nodeType":"130","messageId":"131","endLine":1,"endColumn":15},{"ruleId":"128","severity":1,"message":"153","line":1,"column":8,"nodeType":"130","messageId":"131","endLine":1,"endColumn":12},{"ruleId":"128","severity":1,"message":"154","line":3,"column":8,"nodeType":"130","messageId":"131","endLine":3,"endColumn":26},{"ruleId":"128","severity":1,"message":"129","line":6,"column":22,"nodeType":"130","messageId":"131","endLine":6,"endColumn":27},{"ruleId":"128","severity":1,"message":"155","line":6,"column":29,"nodeType":"130","messageId":"131","endLine":6,"endColumn":38},{"ruleId":"128","severity":1,"message":"156","line":1,"column":8,"nodeType":"130","messageId":"131","endLine":1,"endColumn":18},{"ruleId":"128","severity":1,"message":"157","line":1,"column":8,"nodeType":"130","messageId":"131","endLine":1,"endColumn":23},{"ruleId":"128","severity":1,"message":"154","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":26},{"ruleId":"128","severity":1,"message":"158","line":1,"column":8,"nodeType":"130","messageId":"131","endLine":1,"endColumn":19},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'isDetails' is assigned a value but never used.","'useEffect' is defined but never used.","'setDoctors' is assigned a value but never used.","'useState' is defined but never used.","'doctor_lastname' is assigned a value but never used.","'handleDoctorLastNameChange' is defined but never used.","'updatedPatient' is assigned a value but never used.","'patient_lastname' is assigned a value but never used.","'setPatientLastName' is assigned a value but never used.","'toBeUpdatedDoctor' is assigned a value but never used.","'toBeUpdatedPatient' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["159"],"'updatedDoctor' is assigned a value but never used.","'updatedAppointment' is assigned a value but never used.","'handleAppointmentDoctorChange' is defined but never used.","'handleAppointmentPatientChange' is defined but never used.","'newAppointment' is assigned a value but never used.","'Doctors' is defined but never used.","'Home' is defined but never used.","'AppointmentDetails' is defined but never used.","'useParams' is defined but never used.","'DoctorList' is defined but never used.","'AppointmentList' is defined but never used.","'PatientList' is defined but never used.",{"desc":"160","fix":"161"},"Update the dependencies array to be: [id]",{"range":"162","text":"163"},[1382,1384],"[id]"]